
" work around problem in mac case insensitive file names...
augroup Priv
autocmd FileType c set ft=cpp
autocmd BufRead,BufNewFile *.C set ft=cpp
augroup end

" map  ea~@bbi@~nn
set autowrite
set wrapscan
set noignorecase
set showbreak=         " Show me where long lines break


nmap <F9> 
nmap <C-X> 

nmap <F8> <ESC>gg/Revision History<CR>zf/End of Revision<CR>

function s:Cursor_Moved()
  let cur_pos = winline()
  if g:last_pos == 0
    set cul
    let g:last_pos = cur_pos
    return
  endif
  let diff = g:last_pos - cur_pos
  if diff > 1 || diff < -1
    set cul
  else
    set nocul
  endif
  let g:last_pos = cur_pos
endfunction
"autocmd CursorMoved,CursorMovedI * call s:Cursor_Moved()
let g:last_pos = 0

" For omnicppcomplete
set nocp
filetype plugin on

vmap gtd <Esc>'<O<C-U>cmdtrace on stderr<Esc>'>o<C-U>cmdtrace off<Esc>

"set statusline=%<%f%=\ %2*%{VimBuddy()}%*\ %([%1*%M\%*%n%R\%Y
"             \%{VarExists(',GZ','b:zipflag')}]%)\ %02c%V(%02B)C\ %3l/%LL\ %P
highlight User2 ctermfg=blue ctermbg=gray  guifg=darkblue guibg=gray
" OK. So here is the infamous VimBuddy. You can delete it, if it is not
" referenced from your 'statusline'
function! VimBuddy()
    " Take a copy for others to see the messages
    if ! exists("s:vimbuddy_msg")
        let s:vimbuddy_msg = v:statusmsg
    endif
    if ! exists("s:vimbuddy_warn")
        let s:vimbuddy_warn = v:warningmsg
    endif
    if ! exists("s:vimbuddy_err")
        let s:vimbuddy_err = v:errmsg
    endif
    if ! exists("s:vimbuddy_onemore")
        let s:vimbuddy_onemore = ""
    endif

    if g:actual_curbuf != bufnr("%")
        " Not my buffer, sleeping
        return "|-o"
    elseif s:vimbuddy_err != v:errmsg
        let v:errmsg = v:errmsg . " "
        let s:vimbuddy_err = v:errmsg
        return ":-("
    elseif s:vimbuddy_warn != v:warningmsg
        let v:warningmsg = v:warningmsg . " "
        let s:vimbuddy_warn = v:warningmsg
        return "(-:"
    elseif s:vimbuddy_msg != v:statusmsg
        let v:statusmsg = v:statusmsg . " "
        let s:vimbuddy_msg = v:statusmsg
        let test = matchstr(v:statusmsg, 'lines *$')
        let num = substitute(v:statusmsg, '^\([0-9]*\).*', '\1', '') + 0
        " How impressed should we be
        if test != "" && num > 20
            let str = ":-O"
        elseif test != "" && num
            let str = ":-o"
        else
            let str = ":-/"
        endif
		  let s:vimbuddy_onemore = str
		  return str
	 elseif s:vimbuddy_onemore != ""
		let str = s:vimbuddy_onemore
		let s:vimbuddy_onemore = ""
		return str
    endif

    if ! exists("b:lastcol")
        let b:lastcol = col(".")
    endif
    if ! exists("b:lastlineno")
        let b:lastlineno = line(".")
    endif
    let num = b:lastcol - col(".")
    let b:lastcol = col(".")
    if (num == 1 || num == -1) && b:lastlineno == line(".")
        " Let VimBuddy rotate his nose
        let num = b:lastcol % 4
        if num == 0
            let ch = '/'
         elseif num == 1
            let ch = '-'
        elseif num == 2
            let ch = '\'
        else
            let ch = '|'
        endif
        return ":" . ch . ")"
    endif
    let b:lastlineno = line(".")

    " Happiness is my favourite mood
    return ":-)"
endfunction
